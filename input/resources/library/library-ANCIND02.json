{
  "resourceType": "Library",
  "id": "ANCIND02",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/who/anc-cds/Library/ANCIND02",
  "name": "ANCIND02",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://hl7.org/fhir/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library BCx",
    "resource": "http://fhir.org/guides/who/anc-cds/Library/ANCBaseConcepts"
  }, {
    "type": "depends-on",
    "display": "Library Cx",
    "resource": "http://fhir.org/guides/who/anc-cds/Library/ANCConcepts"
  }, {
    "type": "depends-on",
    "display": "Library BaseData",
    "resource": "http://fhir.org/guides/who/anc-cds/Library/ANCBaseDataElements"
  }, {
    "type": "depends-on",
    "display": "Library PatientData",
    "resource": "http://fhir.org/guides/who/anc-cds/Library/ANCDataElements"
  }, {
    "type": "depends-on",
    "display": "Library ContactData",
    "resource": "http://fhir.org/guides/who/anc-cds/Library/ANCContactDataElements"
  }, {
    "type": "depends-on",
    "display": "Library Stratifiers",
    "resource": "http://fhir.org/guides/who/anc-cds/Library/ANCStratifiers"
  }, {
    "type": "depends-on",
    "display": "Library BCx",
    "resource": "http://fhir.org/guides/who/anc-cds/Library/ANCBaseConcepts"
  }, {
    "type": "depends-on",
    "display": "Value set Antenatal care case",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/antenatal-care-case"
  } ],
  "parameter": [ {
    "name": "Measurement Period",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "Initial Population",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Antenatal care case",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "EpisodeOfCare"
  }, {
    "name": "Numerator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Denominator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Age Stratifier",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Coding"
  }, {
    "name": "By Age",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Coding"
  }, {
    "name": "Education Level Stratifier",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Any"
  }, {
    "name": "By Education Level",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Any"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "EpisodeOfCare",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/who/anc-cds/ValueSet/antenatal-care-case"
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "LyoKTGlicmFyeSBBTkMuSU5ELjIKV0hPIEFudGVuYXRhbCBDYXJlIChBTkMpIEluZGljYXRvciAyClBlcmNlbnRhZ2Ugb2YgcHJlZ25hbnQgd29tZW4gd2hvIHJlY2VpdmVkIGlyb24gYW5kIGZvbGljIGFjaWQgKElGQSkgc3VwcGxlbWVudHMgZm9yIDkwKyBkYXlzCgpOdW1lcmF0b3I6IE51bWJlciBvZiBwcmVnbmFudCB3b21lbiB3aG8gcmVjZWl2ZWQgdGhlIHJlY29tbWVuZGVkIG51bWJlciBvZiBJRkEgdGFibGV0cyBkdXJpbmcgYWxsIHByZXZpb3VzIGNvbnRhY3RzCk51bWVyYXRvciBDb21wdXRhdGlvbjogQ09VTlQgb2YgbnVtYmVyIG9mIHdvbWVuIHdobyB3ZXJlIHByZXNjcmliZWQgSUZBIHRhYmxldHMgYXQgZWFjaCBBTkMgY29udGFjdCB0aGV5IGhhdmUgaGFkCkRlbm9taW5hdG9yOiBUb3RhbCBudW1iZXIgb2YgYW50ZW5hdGFsIGNsaWVudHMgd2l0aCBhIGZpcnN0IGNvbnRhY3QKRGVub21pbmF0b3IgQ29tcHV0YXRpb246IENPVU5UIG9mIGFsbCB3b21lbiB3aG9zZSByZWNvcmRzIHdlcmUgY2xvc2VkIChBTkMKICBjbG9zZSBmb3JtKSBpbiB0aGUgbGFzdCByZXBvcnRpbmcgcGVyaW9kIGR1ZSB0byBhbnkgb2YgdGhlIHJlYXNvbnMgYmVsb3c6CiAgICDCuyBsaXZlIGJpcnRoCiAgICDCuyBzdGlsbGJpcnRoCiAgICDCuyBtaXNjYXJyaWFnZQogICAgwrsgYWJvcnRpb24KICAgIMK7IHdvbWFuIGRpZWQKICAgIMK7IGxvc3QgdG8gZm9sbG93LXVwCiAgICDCuyBtb3ZlZCBhd2F5CkRpc2FnZ3JlZ2F0aW9uOgpBZ2UgKDEw4oCTMTQsIDE14oCTMTksIDIwKykKRWR1Y2F0aW9uIGxldmVsIChub25lLCBkb27igJl0IGtub3csIHByaW1hcnksIHNlY29uZGFyeSwgaGlnaGVyKQpSZWZlcmVuY2U6CldITyBBTkMgbW9uaXRvcmluZyBmcmFtZXdvcmsgKDQzKXMKKi8KbGlicmFyeSBBTkNJTkQwMgoKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScKCmluY2x1ZGUgRkhJUkhlbHBlcnMgdmVyc2lvbiAnNC4wLjEnCgppbmNsdWRlIEFOQ0Jhc2VDb25jZXB0cyBjYWxsZWQgQkN4CmluY2x1ZGUgQU5DQ29uY2VwdHMgY2FsbGVkIEN4CmluY2x1ZGUgQU5DQmFzZURhdGFFbGVtZW50cyBjYWxsZWQgQmFzZURhdGEKaW5jbHVkZSBBTkNEYXRhRWxlbWVudHMgY2FsbGVkIFBhdGllbnREYXRhCmluY2x1ZGUgQU5DQ29udGFjdERhdGFFbGVtZW50cyBjYWxsZWQgQ29udGFjdERhdGEKaW5jbHVkZSBBTkNTdHJhdGlmaWVycyBjYWxsZWQgU3RyYXRpZmllcnMKCnBhcmFtZXRlciAiTWVhc3VyZW1lbnQgUGVyaW9kIiBJbnRlcnZhbDxEYXRlVGltZT4gZGVmYXVsdCBJbnRlcnZhbFtAMjAyMC0wMS0wMSwgQDIwMjAtMTItMzFdCgpjb250ZXh0IFBhdGllbnQKCi8qCkluaXRpYWwgcG9wdWxhdGlvbjogQW50ZW5hdGFsIGNsaWVudHMKKi8KZGVmaW5lICJJbml0aWFsIFBvcHVsYXRpb24iOgogIGV4aXN0cyAoQmFzZURhdGEuIkFudGVuYXRhbCBjYXJlIGNhc2UiKQoKLyoKTnVtZXJhdG9yOiBOdW1iZXIgb2YgcHJlZ25hbnQgd29tZW4gd2hvIHJlY2VpdmVkIHRoZSByZWNvbW1lbmRlZCBudW1iZXIgb2YgSUZBIHRhYmxldHMgZHVyaW5nIGFsbCBwcmV2aW91cyBjb250YWN0cwpOdW1lcmF0b3IgQ29tcHV0YXRpb246IENPVU5UIG9mIG51bWJlciBvZiB3b21lbiB3aG8gd2VyZSBwcmVzY3JpYmVkIElGQSB0YWJsZXRzIGF0IGVhY2ggQU5DIGNvbnRhY3QgdGhleSBoYXZlIGhhZAoqLwpkZWZpbmUgTnVtZXJhdG9yOgogIGZhbHNlIC8vIFRPRE8KCi8qCkRlbm9taW5hdG9yOiBUb3RhbCBudW1iZXIgb2YgYW50ZW5hdGFsIGNsaWVudHMgd2l0aCBhIGZpcnN0IGNvbnRhY3QKRGVub21pbmF0b3IgQ29tcHV0YXRpb246IENPVU5UIG9mIGFsbCB3b21lbiB3aG9zZSByZWNvcmRzIHdlcmUgY2xvc2VkIChBTkMKICBjbG9zZSBmb3JtKSBpbiB0aGUgbGFzdCByZXBvcnRpbmcgcGVyaW9kIGR1ZSB0byBhbnkgb2YgdGhlIHJlYXNvbnMgYmVsb3c6CiAgICDCuyBsaXZlIGJpcnRoCiAgICDCuyBzdGlsbGJpcnRoCiAgICDCuyBtaXNjYXJyaWFnZQogICAgwrsgYWJvcnRpb24KICAgIMK7IHdvbWFuIGRpZWQKICAgIMK7IGxvc3QgdG8gZm9sbG93LXVwCiAgICDCuyBtb3ZlZCBhd2F5CiovCmRlZmluZSBEZW5vbWluYXRvcjoKICBmYWxzZSAvLyBUT0RPCgovKgpEaXNhZ2dyZWdhdGlvbjogQWdlICgxMOKAkzE0LCAxNeKAkzE5LCAyMCspCiovCmRlZmluZSAiQWdlIFN0cmF0aWZpZXIiOgogIFN0cmF0aWZpZXJzLiJCeSBBZ2UiCgovKgpEaXNhZ2dyZWdhdGlvbjogRWR1Y2F0aW9uIGxldmVsIChub25lLCBkb27igJl0IGtub3csIHByaW1hcnksIHNlY29uZGFyeSwgaGlnaGVyKQoqLwpkZWZpbmUgIkVkdWNhdGlvbiBMZXZlbCBTdHJhdGlmaWVyIjoKICBTdHJhdGlmaWVycy4iQnkgRWR1Y2F0aW9uIExldmVsIgo="
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  } ]
}