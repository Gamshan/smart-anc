{
  "resourceType": "Library",
  "id": "ANCDT06",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/who/anc-cds/Library/ANCDT06",
  "identifier": [ {
    "use": "official",
    "value": "ANC.DT.06"
  } ],
  "name": "ANCDT06",
  "title": "ANC.DT.06 Physical symptoms and exam results requiring referral",
  "description": "If the woman has any of the following physical exam results, refer to the hospital",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://hl7.org/fhir/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library Config",
    "resource": "http://fhir.org/guides/who/anc-cds/Library/ANCConfig"
  }, {
    "type": "depends-on",
    "display": "Library Cx",
    "resource": "http://fhir.org/guides/who/anc-cds/Library/ANCConcepts"
  }, {
    "type": "depends-on",
    "display": "Library PatientData",
    "resource": "http://fhir.org/guides/who/anc-cds/Library/ANCDataElements"
  }, {
    "type": "depends-on",
    "display": "Library ContactData",
    "resource": "http://fhir.org/guides/who/anc-cds/Library/ANCContactDataElements"
  }, {
    "type": "depends-on",
    "display": "Library Cx",
    "resource": "http://fhir.org/guides/who/anc-cds/Library/ANCConcepts"
  }, {
    "type": "depends-on",
    "display": "Value set Body temperature",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/body-temperature"
  }, {
    "type": "depends-on",
    "display": "Value set Second body temperature",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/second-body-temperature"
  }, {
    "type": "depends-on",
    "display": "Value set Second pulse rate",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/second-pulse-rate"
  }, {
    "type": "depends-on",
    "display": "Value set Respiratory exam result",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/respiratory-exam-result"
  }, {
    "type": "depends-on",
    "display": "Value set Respiratory exam result - Dyspnoea Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/respiratory-exam-result-dyspnoea-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Respiratory exam result - Cough Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/respiratory-exam-result-cough-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Respiratory exam result - Rapid breathing Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/respiratory-exam-result-rapid-breathing-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Respiratory exam result - Slow breathing Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/respiratory-exam-result-slow-breathing-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Respiratory exam result - Wheezing Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/respiratory-exam-result-wheezing-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Respiratory exam result - Rales Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/respiratory-exam-result-rales-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Respiratory exam result - Other abnormal result (specify) Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/respiratory-exam-result-other-abnormal-result-specify-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Respiratory exam result - Oximetry",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/respiratory-exam-result-oximetry"
  }, {
    "type": "depends-on",
    "display": "Value set Cardiac exam result",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/cardiac-exam-result"
  }, {
    "type": "depends-on",
    "display": "Value set Cardiac exam result - Heart murmur Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/cardiac-exam-result-heart-murmur-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Cardiac exam result - Weak pulse Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/cardiac-exam-result-weak-pulse-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Cardiac exam result - Tachycardia Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/cardiac-exam-result-tachycardia-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Cardiac exam result - Bradycardia Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/cardiac-exam-result-bradycardia-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Cardiac exam result - Arrhythmia Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/cardiac-exam-result-arrhythmia-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Cardiac exam result - Peripheral cyanosis Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/cardiac-exam-result-peripheral-cyanosis-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Cardiac exam result - Cold sweats Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/cardiac-exam-result-cold-sweats-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Cardiac exam result - Other abnormal cardiac exam result (specify) Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/cardiac-exam-result-other-abnormal-cardiac-exam-result-specify-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Breast exam result",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/breast-exam-result"
  }, {
    "type": "depends-on",
    "display": "Value set Breast exam result - Nodule Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/breast-exam-result-nodule-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Breast exam result - Discharge Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/breast-exam-result-discharge-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Breast exam result - Flushing Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/breast-exam-result-flushing-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Breast exam result - Local pain Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/breast-exam-result-local-pain-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Breast exam result - Bleeding Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/breast-exam-result-bleeding-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Breast exam result - Increased temperature Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/breast-exam-result-increased-temperature-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Breast exam result - Other breast exam result (specify) Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/breast-exam-result-other-breast-exam-result-specify-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Abdominal exam result",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/abdominal-exam-result"
  }, {
    "type": "depends-on",
    "display": "Value set Abdominal exam result - Mass/tumour Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/abdominal-exam-result-mass-tumour-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Abdominal exam result - Pain on superficial palpation Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/abdominal-exam-result-pain-on-superficial-palpation-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Abdominal exam result - Pain on deep palpation Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/abdominal-exam-result-pain-on-deep-palpation-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Abdominal exam result - Painful decompression Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/abdominal-exam-result-painful-decompression-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Abdominal exam result - Other abnormal abdominal exam result (specify) Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/abdominal-exam-result-other-abnormal-abdominal-exam-result-specify-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Pelvic exam result (visual)",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/pelvic-exam-result-visual"
  }, {
    "type": "depends-on",
    "display": "Value set Pelvic exam result (visual) - Abnormal vaginal discharge Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/pelvic-exam-result-visual-abnormal-vaginal-discharge-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Pelvic exam result (visual) - Evidence of amniotic fluid Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/pelvic-exam-result-visual-evidence-of-amniotic-fluid-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Pelvic exam result (visual) - Clusters of erythematous papules Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/pelvic-exam-result-visual-clusters-of-erythematous-papules-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Pelvic exam result (visual) - Vesicles Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/pelvic-exam-result-visual-vesicles-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Pelvic exam result (visual) - Genital ulcer Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/pelvic-exam-result-visual-genital-ulcer-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Pelvic exam result (visual) - Genital pain Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/pelvic-exam-result-visual-genital-pain-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Pelvic exam result (visual) - Lymphadenopathy (pelvic - unilateral or bilateral) Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/pelvic-exam-result-visual-lymphadenopathy-pelvic-unilateral-or-bilateral-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Pelvic exam result (visual) - Cervical friability Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/pelvic-exam-result-visual-cervical-friability-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Pelvic exam result (visual) - Mucopurulent cervicitis Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/pelvic-exam-result-visual-mucopurulent-cervicitis-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Pelvic exam result (visual) - Other abnormal pelvic exam (visual) result (specify) Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/pelvic-exam-result-visual-other-abnormal-pelvic-exam-visual-result-specify-choices"
  }, {
    "type": "depends-on",
    "display": "Value set Gestational age",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/gestational-age"
  }, {
    "type": "depends-on",
    "display": "Value set Fetal heartbeat present",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/fetal-heartbeat-present"
  }, {
    "type": "depends-on",
    "display": "Value set Second fetal heart rate",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/second-fetal-heart-rate"
  } ],
  "parameter": [ {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "Should \"Current physiological symptoms\" = \"Fever\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Body temperature",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Second body temperature",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Should \"Current physiological symptoms\" = \"Abnormal pulse rate\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Second pulse rate",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Should \"Respiratory exam result\" = \"Dyspnoea\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Respiratory exam result",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "CodeableConcept"
  }, {
    "name": "Should \"Respiratory exam result\" = \"Cough\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Respiratory exam result\" = \"Rapid breathing\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Respiratory exam result\" = \"Slow breathing\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Respiratory exam result\" = \"Wheezing\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Respiratory exam result\" = \"Rales\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Respiratory exam result\" = \"Other abnormal respiratory exam result (specify)\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Oximetry\" < 92",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Oximetry",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Should \"Cardiac exam result\" = \"Heart murmur\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Cardiac exam result",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "CodeableConcept"
  }, {
    "name": "Should \"Cardiac exam result\" = \"Weak pulse\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Cardiac exam result\" = \"Tachycardia\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Cardiac exam result\" = \"Bradycardia\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Cardiac exam result\" = \"Arrhythmia\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Cardiac exam result\" = \"Cyanosis\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Cardiac exam result\" = \"Cold sweats\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Cardiac exam result\" = \"Other abnormal cardiac exam result (specify)\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Breast exam result\" = \"Nodule\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Breast exam result",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "CodeableConcept"
  }, {
    "name": "Should \"Breast exam result\" = \"Discharge\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Breast exam result\" = \"Flushing\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Breast exam result\" = \"Local pain\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Breast exam result\" = \"Bleeding\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Breast exam result\" = \"Increased temperature\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Breast exam result\" = \"Other breast exam result (specify)\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Abdominal exam result\" = \"Mass/tumour\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Abdominal exam result",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "CodeableConcept"
  }, {
    "name": "Should \"Abdominal exam result\" = \"Pain on superficial palpation\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Abdominal exam result\" = \"Pain on deep palpation\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Abdominal exam result\" = \"Painful decompression\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Abdominal exam result\" = \"Other abnormal abdominal exam result (specify)\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Pelvic exam result (visual)\" = \"Abnormal vaginal discharge\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Pelvic exam result (visual)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "CodeableConcept"
  }, {
    "name": "Should \"Pelvic exam result (visual)\" = \"Evidence of amniotic fluid\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Pelvic exam result (visual)\" = \"Foul-smelling vaginal discharge\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Pelvic exam result (visual)\" = \"Clusters of erythematous papules\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Pelvic exam result (visual)\" = \"Vesicles\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Pelvic exam result (visual)\" = \"Genital ulcer\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Pelvic exam result (visual)\" = \"Genital pain\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Pelvic exam result (visual)\" = \"Tender bilateral inguinal and femoral lymphadenopathy\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Pelvic exam result (visual)\" = \"Cervical friability\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Pelvic exam result (visual)\" = \"Mucopurulent cervicitis\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Pelvic exam result (visual)\" = \"Tender unilateral lymphadenopathy\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Pelvic exam result (visual)\" = \"Curd-like vaginal discharge\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Pelvic exam result (visual)\" = \"Other abnormal pelvic exam (visual) result (specify)\"",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Should \"Pelvic exam result (visual)\" = \"Evidence of amniotic fluid\" - \"Gestational age\" < 37 weeks",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Gestational age",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Should \"Fetal heartbeat present\" = FALSE",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Fetal heartbeat present",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Should 100 bpm > \"Second fetal heart rate\" > 180 bpm",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Second fetal heart rate",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/who/anc-cds/ValueSet/body-temperature"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/who/anc-cds/ValueSet/second-body-temperature"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/who/anc-cds/ValueSet/second-pulse-rate"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/who/anc-cds/ValueSet/respiratory-exam-result"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/who/anc-cds/ValueSet/respiratory-exam-result-oximetry"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/who/anc-cds/ValueSet/cardiac-exam-result"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/who/anc-cds/ValueSet/breast-exam-result"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/who/anc-cds/ValueSet/abdominal-exam-result"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/who/anc-cds/ValueSet/pelvic-exam-result-visual"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/who/anc-cds/ValueSet/gestational-age"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/who/anc-cds/ValueSet/fetal-heartbeat-present"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/who/anc-cds/ValueSet/second-fetal-heart-rate"
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  } ]
}