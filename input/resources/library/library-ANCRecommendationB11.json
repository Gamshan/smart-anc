{
  "resourceType": "Library",
  "id": "library-ANCRecommendationB11",
  "text": {
    "status": "generated",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><table class=\"grid dict\"><tr><th scope=\"row\"><b>Id: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">library-ANCRecommendationB11</td></tr><tr><th scope=\"row\"><b>Type: </b></th><td style=\"padding-right: 25px;\"> logic-library </td></tr><tr><th scope=\"row\"><b>Version: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">0.1.0</td></tr><tr><th scope=\"row\"><b>Status: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">active</td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"3\" scope=\"row\"><b>Related: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span>Library/library-FHIRHelpers</span></p></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span>Library/library-ANCCommon</span></p></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span>Library/library-ANCCommonConfig</span></p></td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"2\" scope=\"row\"><b>Data Requirements: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Observation</span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Observation</span></p></div></td></tr><tr style=\"vertical-align: top;\"><th scope=\"row\"><b>Content: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><b>type: </b><span>text/cql</span></td></tr><tr><td colspan=\"2\" style=\"padding-left: 25px; padding-right: 25px;\"><pre><code class=\"language-cql\">library ANCRecommendationB11 version '0.1.0'\n/*\n  B.1.1: Complete blood count testing is the recommended method for diagnosing anaemia\n  in pregnancy. In settings where full blood count testing is not available,\n  on-site haemoglobin testing with a haemoglobinometer is recommended over the\n  use of the haemoglobin color scale as the method for diagnosing anaemia in\n  pregnancy.\n\n  &quot;Appropriate Haemoglobin Test Method&quot; :\n    if Complete blood count is Available\n      then Complete blood count\n    else if Haemoglobinometer is available\n      then Haemoglobinometer\n    else Haemoglobin Color Scale\n\n  Recommend the &quot;Appropriate Haemoglobin Test Method&quot; when:\n    Current Encounter is the Patient's First Contact\n      or\n        (\n          Patient's Gestational Age is &gt;= 26 weeks and &lt;= 35 weeks\n          and Patient has not yet had a test within the 26 to 35 week gestation age period\n        )\n      or\n        (\n          Patient's Gestational Age is &gt;= 36\n          and Patient has not yet had test since reaching gestational age of 36 weeks\n        )\n\n  -First contact AND again when GA &gt;= 26 weeks AND again when GA &gt;= 36 weeks\n  -hb_test_status\tAn Hb test is required for all women multiple times during pregnancy to determine if she's anaemic.\n  -MC (select one)\n  \tDone today\n  \tDone earlier\n  \tOrdered\n\t  Not done\n  -Yes\tHaemoglobin - 21AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\tConcept - Test status\t163725AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n\t     NA\tConcept - Test performed on day of visit during active encounter\t165383AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n       NA\tConcept - Test performed earlier before current visit/encounter\t165385AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n\t     NA\tConcept - Ordered\t165384AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n\t     NA\tConcept - Not done\t1118AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n*/\n\nusing FHIR version '4.0.0'\n\ninclude FHIRHelpers version '4.0.0'\ninclude ANCCommon version '0.1.0' called Common\ninclude ANCCommonConfig version '0.1.0' called Config\n\ncontext Patient\n\ndefine &quot;Heamaglobin Tests&quot;: { Common.&quot;Hb Complete Blood Count&quot;, Common.&quot;Hb Haemoglobinometer&quot;, Common.&quot;Hb Color Scale&quot; }\n\n// Haemoglobin test is recommended at: First contact AND again when GA &gt;= 26 weeks AND again when GA &gt;= 36 weeks\ndefine &quot;Blood Haemoglobin Test Is Due&quot;:\n  &quot;Is First Contact&quot;\n    or &quot;26 to 35 Week Test Is Due&quot;\n    or &quot;36 Week Plus Test Is Due&quot;\n\ndefine &quot;LMP Start DateTime&quot;:\n  Common.lmp\n\n// First Contact\ndefine &quot;Is First Contact&quot;:\n  true\n\n// 26-35 Weeks\ndefine &quot;Gestational Age 26 To 35 Weeks Period&quot;:\n  Interval[&quot;LMP Start DateTime&quot; + 25 weeks + 1 day, &quot;LMP Start DateTime&quot; + 35 weeks]\n\ndefine &quot;Gestational Age Is Between 26 and 35 Weeks&quot;:\n  Common.&quot;26 weeks gestation&quot;\n    and not Common.&quot;36 weeks gestation&quot;\n\ndefine &quot;Has Had 26 to 35 Week Test&quot;:\n  exists (\n    [&quot;Observation&quot;] O\n    where O.status = 'final'\n      and FHIRHelpers.ToConcept(O.code) in &quot;Heamaglobin Tests&quot;\n      and (O.effective as FHIR.Period) during day of &quot;Gestational Age 26 To 35 Weeks Period&quot;\n  )\n\ndefine &quot;26 to 35 Week Test Is Due&quot;:\n  &quot;Gestational Age Is Between 26 and 35 Weeks&quot;\n    and not &quot;Has Had 26 to 35 Week Test&quot;\n\n// 36+ Weeks\ndefine &quot;Gestational Age 36 Weeks Or More Period&quot;:\n  Interval[&quot;LMP Start DateTime&quot; + 35 weeks + 1 day, Today()]\n\ndefine &quot;Gestational Age Is 36 Weeks Or More&quot;:\n  Common.&quot;36 weeks gestation&quot;\n\ndefine &quot;Has Had 36 Week Plus Test&quot;:\n  exists (\n    [&quot;Observation&quot;] O\n    where O.status = 'final'\n      and FHIRHelpers.ToConcept(O.code) in &quot;Heamaglobin Tests&quot;\n      and (O.effective as FHIR.Period) during day of &quot;Gestational Age 36 Weeks Or More Period&quot;\n  )\n\ndefine &quot;36 Week Plus Test Is Due&quot;:\n  &quot;Gestational Age Is 36 Weeks Or More&quot;\n    and not &quot;Has Had 36 Week Plus Test&quot;\n\ndefine &quot;Test Type&quot;:\n  Config.&quot;Haemoglobin Test Type&quot;\n\ndefine &quot;Complete Blood Count Haemoglobin Test is Recommended&quot;:\n  &quot;Blood Haemoglobin Test Is Due&quot;\n    and &quot;Test Type&quot; = Common.&quot;Hb Complete Blood Count&quot;.code\n\ndefine &quot;Haemoglobinometer Haemoglobin Test is Recommended&quot;:\n  &quot;Blood Haemoglobin Test Is Due&quot;\n    and &quot;Test Type&quot; = Common.&quot;Hb Haemoglobinometer&quot;.code\n\ndefine &quot;Color Scale Haemoglobin Test is Recommended&quot;:\n  &quot;Blood Haemoglobin Test Is Due&quot;\n    and &quot;Test Type&quot; = Common.&quot;Hb Color Scale&quot;.code\n</code></pre>\n                    \n                    \n                </td>\n            </tr>\n        \n    </table>\n</div>"
  },
  "version": "0.1.0",
  "name": "ANCRecommendationB11",
  "title": "WHO Antenatal Care Guidelines FHIR Recommendation B.1.1 Logic",
  "status": "active",
  "experimental": true,
  "type": {
    "coding": [
      {
        "system": "http://hl7.org/fhir/codesystem-library-type.html",
        "code": "logic-library"
      }
    ]
  },
  "relatedArtifact": [
    {
      "type": "depends-on",
      "resource": "Library/library-FHIRHelpers"
    },
    {
      "type": "depends-on",
      "resource": "Library/library-ANCCommon"
    },
    {
      "type": "depends-on",
      "resource": "Library/library-ANCCommonConfig"
    }
  ],
  "dataRequirement": [
    {
      "type": "Observation"
    },
    {
      "type": "Observation"
    }
  ],
  "content": [
    {
      "contentType": "application/elm+xml",
      "data": ""
    },
    {
      "contentType": "text/cql",
      "data": "bGlicmFyeSBBTkNSZWNvbW1lbmRhdGlvbkIxMSB2ZXJzaW9uICcwLjEuMCcKLyoKICBCLjEuMTogQ29tcGxldGUgYmxvb2QgY291bnQgdGVzdGluZyBpcyB0aGUgcmVjb21tZW5kZWQgbWV0aG9kIGZvciBkaWFnbm9zaW5nIGFuYWVtaWEKICBpbiBwcmVnbmFuY3kuIEluIHNldHRpbmdzIHdoZXJlIGZ1bGwgYmxvb2QgY291bnQgdGVzdGluZyBpcyBub3QgYXZhaWxhYmxlLAogIG9uLXNpdGUgaGFlbW9nbG9iaW4gdGVzdGluZyB3aXRoIGEgaGFlbW9nbG9iaW5vbWV0ZXIgaXMgcmVjb21tZW5kZWQgb3ZlciB0aGUKICB1c2Ugb2YgdGhlIGhhZW1vZ2xvYmluIGNvbG9yIHNjYWxlIGFzIHRoZSBtZXRob2QgZm9yIGRpYWdub3NpbmcgYW5hZW1pYSBpbgogIHByZWduYW5jeS4KCiAgIkFwcHJvcHJpYXRlIEhhZW1vZ2xvYmluIFRlc3QgTWV0aG9kIiA6CiAgICBpZiBDb21wbGV0ZSBibG9vZCBjb3VudCBpcyBBdmFpbGFibGUKICAgICAgdGhlbiBDb21wbGV0ZSBibG9vZCBjb3VudAogICAgZWxzZSBpZiBIYWVtb2dsb2Jpbm9tZXRlciBpcyBhdmFpbGFibGUKICAgICAgdGhlbiBIYWVtb2dsb2Jpbm9tZXRlcgogICAgZWxzZSBIYWVtb2dsb2JpbiBDb2xvciBTY2FsZQoKICBSZWNvbW1lbmQgdGhlICJBcHByb3ByaWF0ZSBIYWVtb2dsb2JpbiBUZXN0IE1ldGhvZCIgd2hlbjoKICAgIEN1cnJlbnQgRW5jb3VudGVyIGlzIHRoZSBQYXRpZW50J3MgRmlyc3QgQ29udGFjdAogICAgICBvcgogICAgICAgICgKICAgICAgICAgIFBhdGllbnQncyBHZXN0YXRpb25hbCBBZ2UgaXMgPj0gMjYgd2Vla3MgYW5kIDw9IDM1IHdlZWtzCiAgICAgICAgICBhbmQgUGF0aWVudCBoYXMgbm90IHlldCBoYWQgYSB0ZXN0IHdpdGhpbiB0aGUgMjYgdG8gMzUgd2VlayBnZXN0YXRpb24gYWdlIHBlcmlvZAogICAgICAgICkKICAgICAgb3IKICAgICAgICAoCiAgICAgICAgICBQYXRpZW50J3MgR2VzdGF0aW9uYWwgQWdlIGlzID49IDM2CiAgICAgICAgICBhbmQgUGF0aWVudCBoYXMgbm90IHlldCBoYWQgdGVzdCBzaW5jZSByZWFjaGluZyBnZXN0YXRpb25hbCBhZ2Ugb2YgMzYgd2Vla3MKICAgICAgICApCgogIC1GaXJzdCBjb250YWN0IEFORCBhZ2FpbiB3aGVuIEdBID49IDI2IHdlZWtzIEFORCBhZ2FpbiB3aGVuIEdBID49IDM2IHdlZWtzCiAgLWhiX3Rlc3Rfc3RhdHVzCUFuIEhiIHRlc3QgaXMgcmVxdWlyZWQgZm9yIGFsbCB3b21lbiBtdWx0aXBsZSB0aW1lcyBkdXJpbmcgcHJlZ25hbmN5IHRvIGRldGVybWluZSBpZiBzaGUncyBhbmFlbWljLgogIC1NQyAoc2VsZWN0IG9uZSkKICAJRG9uZSB0b2RheQogIAlEb25lIGVhcmxpZXIKICAJT3JkZXJlZAoJICBOb3QgZG9uZQogIC1ZZXMJSGFlbW9nbG9iaW4gLSAyMUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUEJQ29uY2VwdCAtIFRlc3Qgc3RhdHVzCTE2MzcyNUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQQoJICAgICBOQQlDb25jZXB0IC0gVGVzdCBwZXJmb3JtZWQgb24gZGF5IG9mIHZpc2l0IGR1cmluZyBhY3RpdmUgZW5jb3VudGVyCTE2NTM4M0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQQogICAgICAgTkEJQ29uY2VwdCAtIFRlc3QgcGVyZm9ybWVkIGVhcmxpZXIgYmVmb3JlIGN1cnJlbnQgdmlzaXQvZW5jb3VudGVyCTE2NTM4NUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQQoJICAgICBOQQlDb25jZXB0IC0gT3JkZXJlZAkxNjUzODRBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUEKCSAgICAgTkEJQ29uY2VwdCAtIE5vdCBkb25lCTExMThBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQQoqLwoKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMCcKCmluY2x1ZGUgRkhJUkhlbHBlcnMgdmVyc2lvbiAnNC4wLjAnCmluY2x1ZGUgQU5DQ29tbW9uIHZlcnNpb24gJzAuMS4wJyBjYWxsZWQgQ29tbW9uCmluY2x1ZGUgQU5DQ29tbW9uQ29uZmlnIHZlcnNpb24gJzAuMS4wJyBjYWxsZWQgQ29uZmlnCgpjb250ZXh0IFBhdGllbnQKCmRlZmluZSAiSGVhbWFnbG9iaW4gVGVzdHMiOiB7IENvbW1vbi4iSGIgQ29tcGxldGUgQmxvb2QgQ291bnQiLCBDb21tb24uIkhiIEhhZW1vZ2xvYmlub21ldGVyIiwgQ29tbW9uLiJIYiBDb2xvciBTY2FsZSIgfQoKLy8gSGFlbW9nbG9iaW4gdGVzdCBpcyByZWNvbW1lbmRlZCBhdDogRmlyc3QgY29udGFjdCBBTkQgYWdhaW4gd2hlbiBHQSA+PSAyNiB3ZWVrcyBBTkQgYWdhaW4gd2hlbiBHQSA+PSAzNiB3ZWVrcwpkZWZpbmUgIkJsb29kIEhhZW1vZ2xvYmluIFRlc3QgSXMgRHVlIjoKICAiSXMgRmlyc3QgQ29udGFjdCIKICAgIG9yICIyNiB0byAzNSBXZWVrIFRlc3QgSXMgRHVlIgogICAgb3IgIjM2IFdlZWsgUGx1cyBUZXN0IElzIER1ZSIKCmRlZmluZSAiTE1QIFN0YXJ0IERhdGVUaW1lIjoKICBDb21tb24ubG1wCgovLyBGaXJzdCBDb250YWN0CmRlZmluZSAiSXMgRmlyc3QgQ29udGFjdCI6CiAgdHJ1ZQoKLy8gMjYtMzUgV2Vla3MKZGVmaW5lICJHZXN0YXRpb25hbCBBZ2UgMjYgVG8gMzUgV2Vla3MgUGVyaW9kIjoKICBJbnRlcnZhbFsiTE1QIFN0YXJ0IERhdGVUaW1lIiArIDI1IHdlZWtzICsgMSBkYXksICJMTVAgU3RhcnQgRGF0ZVRpbWUiICsgMzUgd2Vla3NdCgpkZWZpbmUgIkdlc3RhdGlvbmFsIEFnZSBJcyBCZXR3ZWVuIDI2IGFuZCAzNSBXZWVrcyI6CiAgQ29tbW9uLiIyNiB3ZWVrcyBnZXN0YXRpb24iCiAgICBhbmQgbm90IENvbW1vbi4iMzYgd2Vla3MgZ2VzdGF0aW9uIgoKZGVmaW5lICJIYXMgSGFkIDI2IHRvIDM1IFdlZWsgVGVzdCI6CiAgZXhpc3RzICgKICAgIFsiT2JzZXJ2YXRpb24iXSBPCiAgICB3aGVyZSBPLnN0YXR1cyA9ICdmaW5hbCcKICAgICAgYW5kIEZISVJIZWxwZXJzLlRvQ29uY2VwdChPLmNvZGUpIGluICJIZWFtYWdsb2JpbiBUZXN0cyIKICAgICAgYW5kIChPLmVmZmVjdGl2ZSBhcyBGSElSLlBlcmlvZCkgZHVyaW5nIGRheSBvZiAiR2VzdGF0aW9uYWwgQWdlIDI2IFRvIDM1IFdlZWtzIFBlcmlvZCIKICApCgpkZWZpbmUgIjI2IHRvIDM1IFdlZWsgVGVzdCBJcyBEdWUiOgogICJHZXN0YXRpb25hbCBBZ2UgSXMgQmV0d2VlbiAyNiBhbmQgMzUgV2Vla3MiCiAgICBhbmQgbm90ICJIYXMgSGFkIDI2IHRvIDM1IFdlZWsgVGVzdCIKCi8vIDM2KyBXZWVrcwpkZWZpbmUgIkdlc3RhdGlvbmFsIEFnZSAzNiBXZWVrcyBPciBNb3JlIFBlcmlvZCI6CiAgSW50ZXJ2YWxbIkxNUCBTdGFydCBEYXRlVGltZSIgKyAzNSB3ZWVrcyArIDEgZGF5LCBUb2RheSgpXQoKZGVmaW5lICJHZXN0YXRpb25hbCBBZ2UgSXMgMzYgV2Vla3MgT3IgTW9yZSI6CiAgQ29tbW9uLiIzNiB3ZWVrcyBnZXN0YXRpb24iCgpkZWZpbmUgIkhhcyBIYWQgMzYgV2VlayBQbHVzIFRlc3QiOgogIGV4aXN0cyAoCiAgICBbIk9ic2VydmF0aW9uIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgPSAnZmluYWwnCiAgICAgIGFuZCBGSElSSGVscGVycy5Ub0NvbmNlcHQoTy5jb2RlKSBpbiAiSGVhbWFnbG9iaW4gVGVzdHMiCiAgICAgIGFuZCAoTy5lZmZlY3RpdmUgYXMgRkhJUi5QZXJpb2QpIGR1cmluZyBkYXkgb2YgIkdlc3RhdGlvbmFsIEFnZSAzNiBXZWVrcyBPciBNb3JlIFBlcmlvZCIKICApCgpkZWZpbmUgIjM2IFdlZWsgUGx1cyBUZXN0IElzIER1ZSI6CiAgIkdlc3RhdGlvbmFsIEFnZSBJcyAzNiBXZWVrcyBPciBNb3JlIgogICAgYW5kIG5vdCAiSGFzIEhhZCAzNiBXZWVrIFBsdXMgVGVzdCIKCmRlZmluZSAiVGVzdCBUeXBlIjoKICBDb25maWcuIkhhZW1vZ2xvYmluIFRlc3QgVHlwZSIKCmRlZmluZSAiQ29tcGxldGUgQmxvb2QgQ291bnQgSGFlbW9nbG9iaW4gVGVzdCBpcyBSZWNvbW1lbmRlZCI6CiAgIkJsb29kIEhhZW1vZ2xvYmluIFRlc3QgSXMgRHVlIgogICAgYW5kICJUZXN0IFR5cGUiID0gQ29tbW9uLiJIYiBDb21wbGV0ZSBCbG9vZCBDb3VudCIuY29kZQoKZGVmaW5lICJIYWVtb2dsb2Jpbm9tZXRlciBIYWVtb2dsb2JpbiBUZXN0IGlzIFJlY29tbWVuZGVkIjoKICAiQmxvb2QgSGFlbW9nbG9iaW4gVGVzdCBJcyBEdWUiCiAgICBhbmQgIlRlc3QgVHlwZSIgPSBDb21tb24uIkhiIEhhZW1vZ2xvYmlub21ldGVyIi5jb2RlCgpkZWZpbmUgIkNvbG9yIFNjYWxlIEhhZW1vZ2xvYmluIFRlc3QgaXMgUmVjb21tZW5kZWQiOgogICJCbG9vZCBIYWVtb2dsb2JpbiBUZXN0IElzIER1ZSIKICAgIGFuZCAiVGVzdCBUeXBlIiA9IENvbW1vbi4iSGIgQ29sb3IgU2NhbGUiLmNvZGUK"
    }
  ]
}
